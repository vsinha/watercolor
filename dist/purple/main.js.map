{
  "version": 3,
  "sources": ["../../src/purple/setup.ts", "../../src/purple/main.ts"],
  "sourcesContent": ["import p5 from \"p5\";\n\nconst num_points = 200;\nlet lines: p5.Vector[][] = [];\n\nconst new_random_point = (width: number, height: number) =>\n  createVector(random(0, width), random(0, height));\n\nexport const setup = (): void => {\n  createCanvas(windowWidth, windowHeight);\n\n  lines = Array.from({ length: num_points }, () => [\n    new_random_point(windowWidth, windowHeight),\n  ]);\n};\n\nfunction update() {\n  const s = 0.01;\n  const offset = 100;\n  lines = lines.map(() => {\n    const new_line = [new_random_point(windowWidth, windowHeight)];\n    for (let i = 0; i < 10; i++) {\n      const p = new_line[i] || createVector(0, 0);\n      const new_vec = createVector(p?.x, p?.y);\n      new_vec.add(\n        offset * (noise(p.x * s, p.y * s, 0.0) - 0.5),\n        offset * (noise(p.x * s, p.y * s, 1.0) - 0.5)\n      );\n      new_line.push(new_vec);\n    }\n    return new_line;\n  });\n}\n\nexport const draw = (): void => {\n  update();\n  background(\"rgba(255, 255, 255, 0.01)\");\n  noFill();\n  stroke(\"purple\");\n  strokeWeight(1);\n\n  lines.forEach((line) => {\n    beginShape();\n    line.forEach((p) => curveVertex(p.x, p.y));\n    endShape();\n  });\n};\n", "import { setup, draw } from \"./setup\";\n// import { draw } from \"./draw\";\n\n// Expose the setup/draw functions to the global scope, because\n// the entire code will be wrapped in a large IIFE after bundling.\nObject.assign(window, { setup, draw });\n"],
  "mappings": ";;AAEA,MAAM,aAAa;AACnB,MAAI,QAAuB;AAE3B,MAAM,mBAAmB,CAAC,OAAe,WACvC,aAAa,OAAO,GAAG,QAAQ,OAAO,GAAG;AAEpC,MAAM,QAAQ,MAAY;AAC/B,iBAAa,aAAa;AAE1B,YAAQ,MAAM,KAAK,CAAE,QAAQ,aAAc,MAAM;AAAA,MAC/C,iBAAiB,aAAa;AAAA;AAAA;AAIlC,oBAAkB;AAChB,UAAM,IAAI;AACV,UAAM,SAAS;AACf,YAAQ,MAAM,IAAI,MAAM;AACtB,YAAM,WAAW,CAAC,iBAAiB,aAAa;AAChD,eAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AAC3B,cAAM,IAAI,SAAS,MAAM,aAAa,GAAG;AACzC,cAAM,UAAU,aAAa,GAAG,GAAG,GAAG;AACtC,gBAAQ,IACN,SAAU,OAAM,EAAE,IAAI,GAAG,EAAE,IAAI,GAAG,KAAO,MACzC,SAAU,OAAM,EAAE,IAAI,GAAG,EAAE,IAAI,GAAG,KAAO;AAE3C,iBAAS,KAAK;AAAA;AAEhB,aAAO;AAAA;AAAA;AAIJ,MAAM,OAAO,MAAY;AAC9B;AACA,eAAW;AACX;AACA,WAAO;AACP,iBAAa;AAEb,UAAM,QAAQ,CAAC,SAAS;AACtB;AACA,WAAK,QAAQ,CAAC,MAAM,YAAY,EAAE,GAAG,EAAE;AACvC;AAAA;AAAA;;;ACvCJ,SAAO,OAAO,QAAQ,CAAE,OAAO;",
  "names": []
}
